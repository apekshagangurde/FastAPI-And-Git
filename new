from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List

app = FastAPI()


class Patient(BaseModel):
    id: int
    name: str
    age: int
    disease: str


patients: List[Patient] = []


@app.post("/patients/")
def create_patient(patient: Patient):
    patients.append(patient)
    return {"message": "Patient added successfully", "patient": patient}


@app.get("/patients/{patient_id}")
def read_patient(patient_id: int):
    for patient in patients:
        if patient.id == patient_id:
            return patient
    raise HTTPException(status_code=404, detail="Patient not found")
@app.get("/patients")
def read_patient(patient_id: int):
    for patient in patients:
        
            return patient
    raise HTTPException(status_code=404, detail="Patient not found")



@app.put("/patients/{patient_id}")
def update_patient(patient_id: int, updated_patient: Patient):
    for i, patient in enumerate(patients):
        if patient.id == patient_id:
            patients[i] = updated_patient
            return {"message": "patient updated successfully", "patient": updated_patient}
    raise HTTPException(status_code=404, detail="Patient not found")

@app.delete("/patients/{patient_id}")
def delete_patient(patient_id: int):
    for i, patient in enumerate(patients):
        if patient.id == patient_id:
            del patients[i]
            return {"message": "patient deleted successfully"}
    raise HTTPException(status_code=404, detail="Patient not found")
